import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'java'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'org.jetbrains.kotlin.jvm'
    id 'org.jetbrains.kotlin.plugin.spring'
    id 'org.jetbrains.kotlin.plugin.jpa'
}

group = 'org.delivery'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
repositories{
    mavenCentral()
}
ext {
    set('springBootAdminVersion',"3.3.2")
}


dependencies {
    //spring boot admin
    implementation'de.codecentric:spring-boot-admin-starter-client'

    //
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'io.micrometer:micrometer-registry-statsd'
    implementation 'io.micrometer:micrometer-core'


    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.springframework.boot:spring-boot-starter-amqp'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //logstash
    implementation'net.logstash.logback:logstash-logback-encoder:7.3'


    implementation project(':db')
    implementation project(':common')
    // jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

    // jwt
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

    //kotlin
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'

}
dependencyManagement {
    imports {
        mavenBom("de.codecentric:spring-boot-admin-dependencies:${property("springBootAdminVersion")}")
    }
}

test {
    useJUnitPlatform()
}

tasks.withType(KotlinCompile){
    kotlinOptions{
        freeCompilerArgs += '-Xjsr305=strict'
        jvmTarget= '17'
    }
}

bootJar {
    enabled = true
}

jar {
    enabled = false
}